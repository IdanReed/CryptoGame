{
  "contractName": "Game",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "itemId",
          "type": "uint256"
        }
      ],
      "name": "getItemProperties",
      "outputs": [
        {
          "name": "density",
          "type": "uint256"
        },
        {
          "name": "itemType",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "addTransformation",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "addExtractorProps",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "transformationId",
          "type": "uint256"
        }
      ],
      "name": "getTransformationProperties",
      "outputs": [
        {
          "name": "inputCounts",
          "type": "uint256"
        },
        {
          "name": "inputItemIds",
          "type": "uint256[50]"
        },
        {
          "name": "inputQuantities",
          "type": "uint256[50]"
        },
        {
          "name": "outputCounts",
          "type": "uint256"
        },
        {
          "name": "outputItemIds",
          "type": "uint256[50]"
        },
        {
          "name": "outputQuantities",
          "type": "uint256[50]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getProductionMapRanges",
      "outputs": [
        {
          "name": "itemCount",
          "type": "uint256"
        },
        {
          "name": "transformationCount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "density",
          "type": "uint256"
        },
        {
          "name": "itemType",
          "type": "uint256"
        }
      ],
      "name": "addItem",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "addressToConvert",
          "type": "address"
        }
      ],
      "name": "convertAddressToCordinateTuple",
      "outputs": [
        {
          "name": "xAngle",
          "type": "uint256"
        },
        {
          "name": "zAngle",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "isInput",
          "type": "bool"
        },
        {
          "name": "itemId",
          "type": "uint256"
        },
        {
          "name": "quantity",
          "type": "uint256"
        }
      ],
      "name": "addTransformationElement",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "initializeNativeSector",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "sectorAddress",
          "type": "address"
        }
      ],
      "name": "tickSector",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "sectorAddress",
          "type": "address"
        },
        {
          "name": "transformationId",
          "type": "uint256"
        }
      ],
      "name": "manualTransformation",
      "outputs": [
        {
          "name": "successful",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "sectorAddress",
          "type": "address"
        }
      ],
      "name": "getSectorAttributes",
      "outputs": [
        {
          "name": "initialized",
          "type": "bool"
        },
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "xAngle",
          "type": "uint256"
        },
        {
          "name": "zAngle",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"sectorAddress\",\"type\":\"address\"}],\"name\":\"tickSector\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"itemId\",\"type\":\"uint256\"}],\"name\":\"getItemProperties\",\"outputs\":[{\"name\":\"density\",\"type\":\"uint256\"},{\"name\":\"itemType\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sectorAddress\",\"type\":\"address\"},{\"name\":\"transformationId\",\"type\":\"uint256\"}],\"name\":\"manualTransformation\",\"outputs\":[{\"name\":\"successful\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"addTransformation\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"addExtractorProps\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"transformationId\",\"type\":\"uint256\"}],\"name\":\"getTransformationProperties\",\"outputs\":[{\"name\":\"inputCounts\",\"type\":\"uint256\"},{\"name\":\"inputItemIds\",\"type\":\"uint256[50]\"},{\"name\":\"inputQuantities\",\"type\":\"uint256[50]\"},{\"name\":\"outputCounts\",\"type\":\"uint256\"},{\"name\":\"outputItemIds\",\"type\":\"uint256[50]\"},{\"name\":\"outputQuantities\",\"type\":\"uint256[50]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getProductionMapRanges\",\"outputs\":[{\"name\":\"itemCount\",\"type\":\"uint256\"},{\"name\":\"transformationCount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"density\",\"type\":\"uint256\"},{\"name\":\"itemType\",\"type\":\"uint256\"}],\"name\":\"addItem\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addressToConvert\",\"type\":\"address\"}],\"name\":\"convertAddressToCordinateTuple\",\"outputs\":[{\"name\":\"xAngle\",\"type\":\"uint256\"},{\"name\":\"zAngle\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"isInput\",\"type\":\"bool\"},{\"name\":\"itemId\",\"type\":\"uint256\"},{\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"addTransformationElement\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"initializeNativeSector\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"sectorAddress\",\"type\":\"address\"}],\"name\":\"getSectorAttributes\",\"outputs\":[{\"name\":\"initialized\",\"type\":\"bool\"},{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"xAngle\",\"type\":\"uint256\"},{\"name\":\"zAngle\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{\"addItem(uint256,uint256)\":{\"notice\":\"************************************************************ Item loading*************************************************************\"},\"addTransformation()\":{\"notice\":\"************************************************************ Transformation loading*************************************************************\"},\"convertAddressToCordinateTuple(address)\":{\"notice\":\"************************************************************ Public Views/Pure*************************************************************\"},\"getSectorAttributes(address)\":{\"notice\":\"************************************************************ Public functions   - view, pure*************************************************************\"},\"initializeNativeSector()\":{\"notice\":\"************************************************************ Public functions   - full*************************************************************\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/idanreed/Documents/repos/CryptoGame/contracts/Game.sol\":\"Game\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/idanreed/Documents/repos/CryptoGame/contracts/Game.sol\":{\"keccak256\":\"0xb8eccb31d0dc83612301fef969cb5e124940088b6838ed137eec966a0fa1e9f0\",\"urls\":[\"bzzr://5bda68707f4c0fc8a600bda347d3caa961075c2d569f90622f1d612b6f64f25d\"]},\"/Users/idanreed/Documents/repos/CryptoGame/contracts/ProductionManager.sol\":{\"keccak256\":\"0x5dbe09291c42dc4c4d2a8994a1cc530062c663bbfc02ee69ccc4aa0bebbb5378\",\"urls\":[\"bzzr://28997ffa256f5602456020e3b8226b992422edec8bd256c78cf7d8b91b4b752c\"]},\"/Users/idanreed/Documents/repos/CryptoGame/contracts/ProductionMap.sol\":{\"keccak256\":\"0x4101eed266fbd8b3f3391cc1645fa1f9123cdf375dfc39370f744db39f43b983\",\"urls\":[\"bzzr://9e1d98910f500dbbffd3d7b699b58931ee753098fd39dd2a2273972ab75b1ff1\"]},\"/Users/idanreed/Documents/repos/CryptoGame/contracts/types/TypesItem.sol\":{\"keccak256\":\"0xc32c31d9c9d4bc24dc139f03f1ca04ec04f71a64d53c1bd64b0d19cba37636c8\",\"urls\":[\"bzzr://7ca77e7f617309395cacb58a46a047c4edc4557d7727e309de687dda6daa15e4\"]},\"/Users/idanreed/Documents/repos/CryptoGame/contracts/types/TypesSector.sol\":{\"keccak256\":\"0x18510e9ddb95f6583106be76c1e190b940df663d2a4275da007f5676b8e1d279\",\"urls\":[\"bzzr://0a08ee1fa134aa68625db9ff2fedc06ba38cf6dbab2d99c8626ead0d5894dcf0\"]},\"/Users/idanreed/Documents/repos/CryptoGame/contracts/types/TypesTransformation.sol\":{\"keccak256\":\"0xefa863079362dd150a5a92a4ed0d63ad071c5c3e583cb50788682230c47a424d\",\"urls\":[\"bzzr://4f5884090f2bb8a7858cc7f4154ec44e7acbd58d2602c29d6e2a8fcd31eeb110\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611520806100206000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806386f5ffde1161007157806386f5ffde146102c5578063a2125232146102ea578063ba2371c514610322578063d5bbd77914610381578063f1e3769b146103c5578063f82f6a88146103cf576100b4565b80630124d89f146100b957806321ce76de146100fd5780632e2f362e14610146578063352c1c1f146101ac578063581228ac146101b65780637b0ed122146101c0575b600080fd5b6100fb600480360360208110156100cf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061046c565b005b6101296004803603602081101561011357600080fd5b810190808035906020019092919050505061046f565b604051808381526020018281526020019250505060405180910390f35b6101926004803603604081101561015c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610534565b604051808215151515815260200191505060405180910390f35b6101b461053c565b005b6101be610557565b005b6101ec600480360360208110156101d657600080fd5b8101908080359060200190929190505050610559565b6040518087815260200186603260200280838360005b8381101561021d578082015181840152602081019050610202565b5050505090500185603260200280838360005b8381101561024b578082015181840152602081019050610230565b5050505090500184815260200183603260200280838360005b8381101561027f578082015181840152602081019050610264565b5050505090500182603260200280838360005b838110156102ad578082015181840152602081019050610292565b50505050905001965050505050505060405180910390f35b6102cd6107c7565b604051808381526020018281526020019250505060405180910390f35b6103206004803603604081101561030057600080fd5b8101908080359060200190929190803590602001909291905050506107de565b005b6103646004803603602081101561033857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108c2565b604051808381526020018281526020019250505060405180910390f35b6103c36004803603606081101561039757600080fd5b81019080803515159060200190929190803590602001909291908035906020019092919050505061090b565b005b6103cd6109f1565b005b610411600480360360208110156103e557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610dcc565b60405180851515151581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390f35b50565b60008061047a611276565b6001848154811061048757fe5b906000526020600020906004020160405180608001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff1660038111156104d257fe5b60038111156104dd57fe5b815260200160038201604051806020016040529081600082016040518060200160405290816000820154815250508152505081525050905080602001518160400151600381111561052a57fe5b9250925050915091565b600092915050565b600160008181805490500191508161055491906112af565b50565b565b60006105636112e1565b61056b6112e1565b60006105756112e1565b61057d6112e1565b610585611304565b6000888154811061059257fe5b90600052602060002090600302016040518060600160405290816000820154815260200160018201805480602002602001604051908101604052809291908181526020016000905b82821015610620578382906000526020600020906002020160405180604001604052908160008201548152602001600182015481525050815260200190600101906105da565b50505050815260200160028201805480602002602001604051908101604052809291908181526020016000905b828210156106935783829060005260206000209060020201604051806040016040529081600082015481526020016001820154815250508152602001906001019061064d565b5050505081525050905060008090505b81602001515181101561071f57816020015181815181106106c057fe5b6020026020010151600001518782603281106106d857fe5b602002018181525050816020015181815181106106f157fe5b60200260200101516020015186826032811061070957fe5b60200201818152505080806001019150506106a3565b600090505b8160400151518110156107a0578160400151818151811061074157fe5b60200260200101516000015184826032811061075957fe5b6020020181815250508160400151818151811061077257fe5b60200260200101516020015183826032811061078a57fe5b6020020181815250508080600101915050610724565b81602001515187878460400151518787975097509750975097509750505091939550919395565b600080600180549050600080549050915091509091565b6107e6611325565b6107ee611276565b60405180608001604052806001808054905003815260200185815260200184600381111561081857fe5b600381111561082357fe5b815260200183815250905060018190806001815401808255809150509060018203906000526020600020906004020160009091929091909150600082015181600001556020820151816001015560408201518160020160006101000a81548160ff0219169083600381111561089457fe5b0217905550606082015181600301600082015181600001600082015181600001555050505050505050505050565b600080600069ffffffffffffffffffff905060008473ffffffffffffffffffffffffffffffffffffffff169050605082198216901c935081811692508383935093505050915091565b6000806001600080549050038154811061092157fe5b9060005260206000209060030201905061093961133e565b604051806040016040528085815260200184815250905084156109a25781600101819080600181540180825580915050906001820390600052602060002090600202016000909192909190915060008201518160000155602082015181600101555050506109ea565b81600201819080600181540180825580915050906001820390600052602060002090600202016000909192909190915060008201518160000155602082015181600101555050505b5050505050565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060000160009054906101000a900460ff16610ab8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260018152602001807f200000000000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b610dc981604051806101000160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182016040518060400160405290816000820154815260200160018201548152505081526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610c08578382906000526020600020906005020160405180606001604052908160008201604051806060016040529081600082015481526020016001820154815260200160028201548152505081526020016003820154815260200160048201548152505081526020019060010190610b90565b50505050815260200160058201805480602002602001604051908101604052809291908181526020016000905b82821015610ca35783829060005260206000209060040201604051806060016040529081600082016040518060400160405290816000820154815260200160018201548152505081526020016002820154815260200160038201548152505081526020019060010190610c35565b50505050815260200160068201805480602002602001604051908101604052809291908181526020016000905b82821015610d2a578382906000526020600020906002020160405180602001604052908160008201604051806040016040529081600082015481526020016001820154815250508152505081526020019060010190610cd0565b50505050815260200160078201805480602002602001604051908101604052809291908181526020016000905b82821015610dbb57838290600052602060002090600302016040518060400160405290816000820160405180604001604052908160008201548152602001600182015481525050815260200160028201548152505081526020019060010190610d57565b50505050815250503361114e565b50565b600080600080610dda611358565b600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806101000160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182016040518060400160405290816000820154815260200160018201548152505081526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610f65578382906000526020600020906005020160405180606001604052908160008201604051806060016040529081600082015481526020016001820154815260200160028201548152505081526020016003820154815260200160048201548152505081526020019060010190610eed565b50505050815260200160058201805480602002602001604051908101604052809291908181526020016000905b828210156110005783829060005260206000209060040201604051806060016040529081600082016040518060400160405290816000820154815260200160018201548152505081526020016002820154815260200160038201548152505081526020019060010190610f92565b50505050815260200160068201805480602002602001604051908101604052809291908181526020016000905b8282101561108757838290600052602060002090600202016040518060200160405290816000820160405180604001604052908160008201548152602001600182015481525050815250508152602001906001019061102d565b50505050815260200160078201805480602002602001604051908101604052809291908181526020016000905b82821015611118578382906000526020600020906003020160405180604001604052908160008201604051806040016040529081600082015481526020016001820154815250508152602001600282015481525050815260200190600101906110b4565b50505050815250509050806000015181602001518260400151600001518360400151602001519450945094509450509193509193565b8160000151156111a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806114c36032913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16826020015173ffffffffffffffffffffffffffffffffffffffff161415611233576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602781526020018061149c6027913960400191505060405180910390fd5b60008061124384602001516108c2565b91509150604051806040016040528083815260200182815250846040018190525061126d84611273565b50505050565b50565b604051806080016040528060008152602001600081526020016000600381111561129c57fe5b81526020016112a96113bb565b81525090565b8154818355818111156112dc576003028160030283600052602060002091820191016112db91906113d4565b5b505050565b604051806106400160405280603290602082028038833980820191505090505090565b60405180606001604052806000815260200160608152602001606081525090565b604051806020016040528061133861141b565b81525090565b604051806040016040528060008152602001600081525090565b604051806101200160405280600015158152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200161139261142e565b815260200160008152602001606081526020016060815260200160608152602001606081525090565b60405180602001604052806113ce61141b565b81525090565b61141891905b80821115611414576000808201600090556001820160006113fb9190611448565b60028201600061140b9190611448565b506003016113da565b5090565b90565b6040518060200160405280600081525090565b604051806040016040528060008152602001600081525090565b5080546000825560020290600052602060002090810190611469919061146c565b50565b61149891905b8082111561149457600080820160009055600182016000905550600201611472565b5090565b9056fe52657175697265207468617420676976656e20736563746f722068617320736574206f776e657252657175697265207468617420676976656e20736563746f7220686173206e6f74206265656e20696e697469616c697a6564a165627a7a72305820272798fb3aa6e6d860ec226bfa5d83631a105d401f6e5ad22c78c6594ac706750029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c806386f5ffde1161007157806386f5ffde146102c5578063a2125232146102ea578063ba2371c514610322578063d5bbd77914610381578063f1e3769b146103c5578063f82f6a88146103cf576100b4565b80630124d89f146100b957806321ce76de146100fd5780632e2f362e14610146578063352c1c1f146101ac578063581228ac146101b65780637b0ed122146101c0575b600080fd5b6100fb600480360360208110156100cf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061046c565b005b6101296004803603602081101561011357600080fd5b810190808035906020019092919050505061046f565b604051808381526020018281526020019250505060405180910390f35b6101926004803603604081101561015c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610534565b604051808215151515815260200191505060405180910390f35b6101b461053c565b005b6101be610557565b005b6101ec600480360360208110156101d657600080fd5b8101908080359060200190929190505050610559565b6040518087815260200186603260200280838360005b8381101561021d578082015181840152602081019050610202565b5050505090500185603260200280838360005b8381101561024b578082015181840152602081019050610230565b5050505090500184815260200183603260200280838360005b8381101561027f578082015181840152602081019050610264565b5050505090500182603260200280838360005b838110156102ad578082015181840152602081019050610292565b50505050905001965050505050505060405180910390f35b6102cd6107c7565b604051808381526020018281526020019250505060405180910390f35b6103206004803603604081101561030057600080fd5b8101908080359060200190929190803590602001909291905050506107de565b005b6103646004803603602081101561033857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108c2565b604051808381526020018281526020019250505060405180910390f35b6103c36004803603606081101561039757600080fd5b81019080803515159060200190929190803590602001909291908035906020019092919050505061090b565b005b6103cd6109f1565b005b610411600480360360208110156103e557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610dcc565b60405180851515151581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390f35b50565b60008061047a611276565b6001848154811061048757fe5b906000526020600020906004020160405180608001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff1660038111156104d257fe5b60038111156104dd57fe5b815260200160038201604051806020016040529081600082016040518060200160405290816000820154815250508152505081525050905080602001518160400151600381111561052a57fe5b9250925050915091565b600092915050565b600160008181805490500191508161055491906112af565b50565b565b60006105636112e1565b61056b6112e1565b60006105756112e1565b61057d6112e1565b610585611304565b6000888154811061059257fe5b90600052602060002090600302016040518060600160405290816000820154815260200160018201805480602002602001604051908101604052809291908181526020016000905b82821015610620578382906000526020600020906002020160405180604001604052908160008201548152602001600182015481525050815260200190600101906105da565b50505050815260200160028201805480602002602001604051908101604052809291908181526020016000905b828210156106935783829060005260206000209060020201604051806040016040529081600082015481526020016001820154815250508152602001906001019061064d565b5050505081525050905060008090505b81602001515181101561071f57816020015181815181106106c057fe5b6020026020010151600001518782603281106106d857fe5b602002018181525050816020015181815181106106f157fe5b60200260200101516020015186826032811061070957fe5b60200201818152505080806001019150506106a3565b600090505b8160400151518110156107a0578160400151818151811061074157fe5b60200260200101516000015184826032811061075957fe5b6020020181815250508160400151818151811061077257fe5b60200260200101516020015183826032811061078a57fe5b6020020181815250508080600101915050610724565b81602001515187878460400151518787975097509750975097509750505091939550919395565b600080600180549050600080549050915091509091565b6107e6611325565b6107ee611276565b60405180608001604052806001808054905003815260200185815260200184600381111561081857fe5b600381111561082357fe5b815260200183815250905060018190806001815401808255809150509060018203906000526020600020906004020160009091929091909150600082015181600001556020820151816001015560408201518160020160006101000a81548160ff0219169083600381111561089457fe5b0217905550606082015181600301600082015181600001600082015181600001555050505050505050505050565b600080600069ffffffffffffffffffff905060008473ffffffffffffffffffffffffffffffffffffffff169050605082198216901c935081811692508383935093505050915091565b6000806001600080549050038154811061092157fe5b9060005260206000209060030201905061093961133e565b604051806040016040528085815260200184815250905084156109a25781600101819080600181540180825580915050906001820390600052602060002090600202016000909192909190915060008201518160000155602082015181600101555050506109ea565b81600201819080600181540180825580915050906001820390600052602060002090600202016000909192909190915060008201518160000155602082015181600101555050505b5050505050565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060000160009054906101000a900460ff16610ab8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260018152602001807f200000000000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b610dc981604051806101000160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182016040518060400160405290816000820154815260200160018201548152505081526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610c08578382906000526020600020906005020160405180606001604052908160008201604051806060016040529081600082015481526020016001820154815260200160028201548152505081526020016003820154815260200160048201548152505081526020019060010190610b90565b50505050815260200160058201805480602002602001604051908101604052809291908181526020016000905b82821015610ca35783829060005260206000209060040201604051806060016040529081600082016040518060400160405290816000820154815260200160018201548152505081526020016002820154815260200160038201548152505081526020019060010190610c35565b50505050815260200160068201805480602002602001604051908101604052809291908181526020016000905b82821015610d2a578382906000526020600020906002020160405180602001604052908160008201604051806040016040529081600082015481526020016001820154815250508152505081526020019060010190610cd0565b50505050815260200160078201805480602002602001604051908101604052809291908181526020016000905b82821015610dbb57838290600052602060002090600302016040518060400160405290816000820160405180604001604052908160008201548152602001600182015481525050815260200160028201548152505081526020019060010190610d57565b50505050815250503361114e565b50565b600080600080610dda611358565b600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806101000160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182016040518060400160405290816000820154815260200160018201548152505081526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610f65578382906000526020600020906005020160405180606001604052908160008201604051806060016040529081600082015481526020016001820154815260200160028201548152505081526020016003820154815260200160048201548152505081526020019060010190610eed565b50505050815260200160058201805480602002602001604051908101604052809291908181526020016000905b828210156110005783829060005260206000209060040201604051806060016040529081600082016040518060400160405290816000820154815260200160018201548152505081526020016002820154815260200160038201548152505081526020019060010190610f92565b50505050815260200160068201805480602002602001604051908101604052809291908181526020016000905b8282101561108757838290600052602060002090600202016040518060200160405290816000820160405180604001604052908160008201548152602001600182015481525050815250508152602001906001019061102d565b50505050815260200160078201805480602002602001604051908101604052809291908181526020016000905b82821015611118578382906000526020600020906003020160405180604001604052908160008201604051806040016040529081600082015481526020016001820154815250508152602001600282015481525050815260200190600101906110b4565b50505050815250509050806000015181602001518260400151600001518360400151602001519450945094509450509193509193565b8160000151156111a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806114c36032913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16826020015173ffffffffffffffffffffffffffffffffffffffff161415611233576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602781526020018061149c6027913960400191505060405180910390fd5b60008061124384602001516108c2565b91509150604051806040016040528083815260200182815250846040018190525061126d84611273565b50505050565b50565b604051806080016040528060008152602001600081526020016000600381111561129c57fe5b81526020016112a96113bb565b81525090565b8154818355818111156112dc576003028160030283600052602060002091820191016112db91906113d4565b5b505050565b604051806106400160405280603290602082028038833980820191505090505090565b60405180606001604052806000815260200160608152602001606081525090565b604051806020016040528061133861141b565b81525090565b604051806040016040528060008152602001600081525090565b604051806101200160405280600015158152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200161139261142e565b815260200160008152602001606081526020016060815260200160608152602001606081525090565b60405180602001604052806113ce61141b565b81525090565b61141891905b80821115611414576000808201600090556001820160006113fb9190611448565b60028201600061140b9190611448565b506003016113da565b5090565b90565b6040518060200160405280600081525090565b604051806040016040528060008152602001600081525090565b5080546000825560020290600052602060002090810190611469919061146c565b50565b61149891905b8082111561149457600080820160009055600182016000905550600201611472565b5090565b9056fe52657175697265207468617420676976656e20736563746f722068617320736574206f776e657252657175697265207468617420676976656e20736563746f7220686173206e6f74206265656e20696e697469616c697a6564a165627a7a72305820272798fb3aa6e6d860ec226bfa5d83631a105d401f6e5ad22c78c6594ac706750029",
  "sourceMap": "169:1830:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;169:1830:0;;;;;;;",
  "deployedSourceMap": "169:1830:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;169:1830:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;835:58;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;835:58:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;1408:354:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1408:354:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;899:130:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;899:130:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1084:82:3;;;:::i;:::-;;869:46;;;:::i;:::-;;365:1037:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;365:1037:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;365:1037:2;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;365:1037:2;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;365:1037:2;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;365:1037:2;;;;;;;;;;;;;;;;;;;;;1768:213;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;531:333:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;531:333:3;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4357:374:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4357:374:5;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1171:425:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1171:425:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;621:208:0;;;:::i;:::-;;1207:405;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1207:405:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;835:58;;:::o;1408:354:2:-;1478:12;1500:13;1626:26;;:::i;:::-;1655:5;1661:6;1655:13;;;;;;;;;;;;;;;;;;1626:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1700:4;:12;;;1731:4;:13;;;1726:19;;;;;;;;1679:76;;;;;1408:354;;;:::o;899:130:0:-;1000:15;899:130;;;;:::o;1084:82:3:-;1158:1;1132:15;:27;;;;;;;;;;;;;;:::i;:::-;;1084:82::o;869:46::-;:::o;365:1037:2:-;455:16;481:28;;:::i;:::-;519:31;;:::i;:::-;560:17;587:29;;:::i;:::-;626:32;;:::i;:::-;674:36;;:::i;:::-;713:15;729:16;713:33;;;;;;;;;;;;;;;;;;674:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;757:6;782:1;778:5;;774:191;789:14;:21;;;:28;785:1;:32;774:191;;;855:14;:21;;;877:1;855:24;;;;;;;;;;;;;;:31;;;837:12;850:1;837:15;;;;;;;;;;:49;;;;;921:14;:21;;;943:1;921:24;;;;;;;;;;;;;;:33;;;900:15;916:1;900:18;;;;;;;;;;:54;;;;;819:3;;;;;;;774:191;;;982:1;978:5;;974:196;989:14;:22;;;:29;985:1;:33;974:196;;;1057:14;:22;;;1080:1;1057:25;;;;;;;;;;;;;;:32;;;1038:13;1052:1;1038:16;;;;;;;;;;:51;;;;;1125:14;:22;;;1148:1;1125:25;;;;;;;;;;;;;;:34;;;1103:16;1120:1;1103:19;;;;;;;;;;:56;;;;;1020:3;;;;;;;974:196;;;1201:14;:21;;;:28;1243:12;1269:15;1299:14;:22;;;:29;1342:13;1369:16;1180:215;;;;;;;;;;;;;;365:1037;;;;;;;:::o;1768:213::-;1832:14;1856:24;1916:5;:12;;;;1942:15;:22;;;;1896:78;;;;1768:213;;:::o;531:333:3:-;596:47;;:::i;:::-;654:31;;:::i;:::-;688:138;;;;;;;;731:1;716:5;:12;;;;:16;688:138;;;;746:7;688:138;;;;776:8;767:18;;;;;;;;688:138;;;;;;;;;;;;799:17;688:138;;;654:172;;836:5;847:9;836:21;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;836:21:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;531:333;;;;:::o;4357:374:5:-;4470:11;4483;4510:14;4527:13;4510:30;;4550:18;4576:16;4571:22;;4550:43;;4645:2;4631:9;4630:10;4614:13;:26;4613:34;;4604:43;;4682:9;4666:13;:25;4657:34;;4709:6;4717;4701:23;;;;;;4357:374;;;:::o;1171:425:3:-;1267:37;1307:15;1348:1;1323:15;:22;;;;:26;1307:43;;;;;;;;;;;;;;;;;;1267:83;;1360:36;;:::i;:::-;1399:39;;;;;;;;1421:6;1399:39;;;;1429:8;1399:39;;;1360:78;;1456:7;1453:137;;;1479:14;:21;;1506:7;1479:35;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1479:35:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1453:137;;;1543:14;:22;;1571:7;1543:36;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1543:36:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1453:137;1171:425;;;;;:::o;621:208:0:-;672:27;702:7;:19;710:10;702:19;;;;;;;;;;;;;;;672:49;;739:12;:24;;;;;;;;;;;;731:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;779:42;796:12;779:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;810:10;779:16;:42::i;:::-;621:208;:::o;1207:405::-;1289:16;1315:13;1338:11;1359;1383:23;;:::i;:::-;1409:7;:22;1417:13;1409:22;;;;;;;;;;;;;;;1383:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1463:9;:21;;;1498:9;:15;;;1527:9;:20;;;:27;;;1568:9;:20;;;:27;;;1442:163;;;;;;;;;1207:405;;;;;:::o;1689:625:5:-;1870:6;:18;;;1869:19;1848:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2019:1;1995:26;;:6;:12;;;:26;;;;1974:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2101:11;2126;2150:44;2181:6;:12;;;2150:30;:44::i;:::-;2097:97;;;;2225:31;;;;;;;;2241:6;2225:31;;;;2249:6;2225:31;;;2205:6;:17;;:51;;;;2267:40;2300:6;2267:32;:40::i;:::-;1689:625;;;;:::o;2319:99::-;;:::o;169:1830:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;169:1830:0;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./types/TypesItem.sol\";\nimport \"./types/TypesTransformation.sol\";\nimport \"./types/TypesSector.sol\";\n\nimport \"./ProductionManager.sol\";\n\ncontract Game is\n    TypesItem, TypesTransformation, TypesSector,\n    ProductionManager\n    {\n\n    /**************************************************************\n    Data\n    **************************************************************/\n    mapping (address => Sector) sectors;\n\n    /**************************************************************\n    Public functions   - full\n    **************************************************************/\n    function initializeNativeSector() public {\n        Sector storage nativeSector = sectors[msg.sender];\n        require(nativeSector.initialized, \" \");\n        initializeSector(nativeSector, msg.sender);\n\n    }\n\n    function tickSector(address sectorAddress) public {\n\n    }\n\n    function manualTransformation(address sectorAddress, uint transformationId) public returns (\n        bool successful\n    ){\n\n    }\n\n    /**************************************************************\n    Public functions   - view, pure\n    **************************************************************/\n    function getSectorAttributes(address sectorAddress) public view returns (\n        bool initialized,\n        address owner,\n        uint xAngle,\n        uint zAngle ){\n\n        Sector memory selSector = sectors[sectorAddress];\n\n        return (\n            selSector.initialized,\n            selSector.owner,\n            selSector.cordinates.xAngle,\n            selSector.cordinates.zAngle\n        );\n    }\n\n    /**************************************************************\n    Modifiers\n    **************************************************************/\n    modifier callerOwnsSector(address sectorAddress) {\n        require(\n            msg.sender == sectors[sectorAddress].owner,\n            \"Require that sector reference by address is owned by the caller\"\n        );\n        _;\n    }\n}",
  "sourcePath": "/Users/idanreed/Documents/repos/CryptoGame/contracts/Game.sol",
  "ast": {
    "absolutePath": "/Users/idanreed/Documents/repos/CryptoGame/contracts/Game.sol",
    "exportedSymbols": {
      "Game": [
        106
      ]
    },
    "id": 107,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "/Users/idanreed/Documents/repos/CryptoGame/contracts/types/TypesItem.sol",
        "file": "./types/TypesItem.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 107,
        "sourceUnit": 564,
        "src": "25:31:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/idanreed/Documents/repos/CryptoGame/contracts/types/TypesTransformation.sol",
        "file": "./types/TypesTransformation.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 107,
        "sourceUnit": 923,
        "src": "57:41:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/idanreed/Documents/repos/CryptoGame/contracts/types/TypesSector.sol",
        "file": "./types/TypesSector.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 107,
        "sourceUnit": 906,
        "src": "99:33:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/idanreed/Documents/repos/CryptoGame/contracts/ProductionManager.sol",
        "file": "./ProductionManager.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 107,
        "sourceUnit": 432,
        "src": "134:33:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6,
              "name": "TypesItem",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 563,
              "src": "190:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TypesItem_$563",
                "typeString": "contract TypesItem"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "190:9:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8,
              "name": "TypesTransformation",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 922,
              "src": "201:19:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TypesTransformation_$922",
                "typeString": "contract TypesTransformation"
              }
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "201:19:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10,
              "name": "TypesSector",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 905,
              "src": "222:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TypesSector_$905",
                "typeString": "contract TypesSector"
              }
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "222:11:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12,
              "name": "ProductionManager",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 431,
              "src": "239:17:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ProductionManager_$431",
                "typeString": "contract ProductionManager"
              }
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "239:17:0"
          }
        ],
        "contractDependencies": [
          540,
          905,
          922,
          563,
          431
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 106,
        "linearizedBaseContracts": [
          106,
          431,
          540,
          905,
          922,
          563
        ],
        "name": "Game",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 17,
            "name": "sectors",
            "nodeType": "VariableDeclaration",
            "scope": 106,
            "src": "413:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Sector_$628_storage_$",
              "typeString": "mapping(address => struct TypesSector.Sector)"
            },
            "typeName": {
              "id": 16,
              "keyType": {
                "id": 14,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "422:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "413:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Sector_$628_storage_$",
                "typeString": "mapping(address => struct TypesSector.Sector)"
              },
              "valueType": {
                "contractScope": null,
                "id": 15,
                "name": "Sector",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 628,
                "src": "433:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Sector_$628_storage_ptr",
                  "typeString": "struct TypesSector.Sector"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 39,
              "nodeType": "Block",
              "src": "662:167:0",
              "statements": [
                {
                  "assignments": [
                    21
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 21,
                      "name": "nativeSector",
                      "nodeType": "VariableDeclaration",
                      "scope": 39,
                      "src": "672:27:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Sector_$628_storage_ptr",
                        "typeString": "struct TypesSector.Sector"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 20,
                        "name": "Sector",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 628,
                        "src": "672:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Sector_$628_storage_ptr",
                          "typeString": "struct TypesSector.Sector"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 26,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 22,
                      "name": "sectors",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "702:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Sector_$628_storage_$",
                        "typeString": "mapping(address => struct TypesSector.Sector storage ref)"
                      }
                    },
                    "id": 25,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 23,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 937,
                        "src": "710:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 24,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "710:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "702:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Sector_$628_storage",
                      "typeString": "struct TypesSector.Sector storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "672:49:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 28,
                          "name": "nativeSector",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21,
                          "src": "739:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Sector_$628_storage_ptr",
                            "typeString": "struct TypesSector.Sector storage pointer"
                          }
                        },
                        "id": 29,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "initialized",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 609,
                        "src": "739:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "20",
                        "id": 30,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "765:3:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a",
                          "typeString": "literal_string \" \""
                        },
                        "value": " "
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a",
                          "typeString": "literal_string \" \""
                        }
                      ],
                      "id": 27,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        940,
                        941
                      ],
                      "referencedDeclaration": 941,
                      "src": "731:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 31,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "731:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32,
                  "nodeType": "ExpressionStatement",
                  "src": "731:38:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 34,
                        "name": "nativeSector",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "796:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Sector_$628_storage_ptr",
                          "typeString": "struct TypesSector.Sector storage pointer"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 35,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 937,
                          "src": "810:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 36,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "810:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Sector_$628_storage_ptr",
                          "typeString": "struct TypesSector.Sector storage pointer"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 33,
                      "name": "initializeSector",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 675,
                      "src": "779:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Sector_$628_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (struct TypesSector.Sector memory,address)"
                      }
                    },
                    "id": 37,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "779:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38,
                  "nodeType": "ExpressionStatement",
                  "src": "779:42:0"
                }
              ]
            },
            "documentation": "************************************************************\nPublic functions   - full*************************************************************",
            "id": 40,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initializeNativeSector",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "652:2:0"
            },
            "returnParameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "662:0:0"
            },
            "scope": 106,
            "src": "621:208:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 45,
              "nodeType": "Block",
              "src": "885:8:0",
              "statements": []
            },
            "documentation": null,
            "id": 46,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tickSector",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42,
                  "name": "sectorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 46,
                  "src": "855:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "855:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "854:23:0"
            },
            "returnParameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "885:0:0"
            },
            "scope": 106,
            "src": "835:58:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 55,
              "nodeType": "Block",
              "src": "1021:8:0",
              "statements": []
            },
            "documentation": null,
            "id": 56,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "manualTransformation",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48,
                  "name": "sectorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 56,
                  "src": "929:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "929:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50,
                  "name": "transformationId",
                  "nodeType": "VariableDeclaration",
                  "scope": 56,
                  "src": "952:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "952:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "928:46:0"
            },
            "returnParameters": {
              "id": 54,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53,
                  "name": "successful",
                  "nodeType": "VariableDeclaration",
                  "scope": 56,
                  "src": "1000:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1000:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "990:31:0"
            },
            "scope": 106,
            "src": "899:130:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 87,
              "nodeType": "Block",
              "src": "1372:240:0",
              "statements": [
                {
                  "assignments": [
                    70
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 70,
                      "name": "selSector",
                      "nodeType": "VariableDeclaration",
                      "scope": 87,
                      "src": "1383:23:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Sector_$628_memory_ptr",
                        "typeString": "struct TypesSector.Sector"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 69,
                        "name": "Sector",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 628,
                        "src": "1383:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Sector_$628_storage_ptr",
                          "typeString": "struct TypesSector.Sector"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 74,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 71,
                      "name": "sectors",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "1409:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Sector_$628_storage_$",
                        "typeString": "mapping(address => struct TypesSector.Sector storage ref)"
                      }
                    },
                    "id": 73,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 72,
                      "name": "sectorAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58,
                      "src": "1417:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1409:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Sector_$628_storage",
                      "typeString": "struct TypesSector.Sector storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1383:48:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 75,
                          "name": "selSector",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70,
                          "src": "1463:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Sector_$628_memory_ptr",
                            "typeString": "struct TypesSector.Sector memory"
                          }
                        },
                        "id": 76,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "initialized",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 609,
                        "src": "1463:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 77,
                          "name": "selSector",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70,
                          "src": "1498:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Sector_$628_memory_ptr",
                            "typeString": "struct TypesSector.Sector memory"
                          }
                        },
                        "id": 78,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "owner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 611,
                        "src": "1498:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 79,
                            "name": "selSector",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70,
                            "src": "1527:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Sector_$628_memory_ptr",
                              "typeString": "struct TypesSector.Sector memory"
                            }
                          },
                          "id": 80,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "cordinates",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 613,
                          "src": "1527:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SphereCordinate_$593_memory",
                            "typeString": "struct TypesSector.SphereCordinate memory"
                          }
                        },
                        "id": 81,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "xAngle",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 590,
                        "src": "1527:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 82,
                            "name": "selSector",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70,
                            "src": "1568:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Sector_$628_memory_ptr",
                              "typeString": "struct TypesSector.Sector memory"
                            }
                          },
                          "id": 83,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "cordinates",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 613,
                          "src": "1568:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SphereCordinate_$593_memory",
                            "typeString": "struct TypesSector.SphereCordinate memory"
                          }
                        },
                        "id": 84,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "zAngle",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 592,
                        "src": "1568:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 85,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1449:156:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_address_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(bool,address,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 68,
                  "id": 86,
                  "nodeType": "Return",
                  "src": "1442:163:0"
                }
              ]
            },
            "documentation": "************************************************************\nPublic functions   - view, pure*************************************************************",
            "id": 88,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSectorAttributes",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58,
                  "name": "sectorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 88,
                  "src": "1236:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1236:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1235:23:0"
            },
            "returnParameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61,
                  "name": "initialized",
                  "nodeType": "VariableDeclaration",
                  "scope": 88,
                  "src": "1289:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1289:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 88,
                  "src": "1315:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1315:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65,
                  "name": "xAngle",
                  "nodeType": "VariableDeclaration",
                  "scope": 88,
                  "src": "1338:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1338:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67,
                  "name": "zAngle",
                  "nodeType": "VariableDeclaration",
                  "scope": 88,
                  "src": "1359:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1359:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1279:93:0"
            },
            "scope": 106,
            "src": "1207:405:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 104,
              "nodeType": "Block",
              "src": "1817:180:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 99,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 93,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 937,
                            "src": "1848:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 94,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1848:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 95,
                              "name": "sectors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17,
                              "src": "1862:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Sector_$628_storage_$",
                                "typeString": "mapping(address => struct TypesSector.Sector storage ref)"
                              }
                            },
                            "id": 97,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 96,
                              "name": "sectorAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 90,
                              "src": "1870:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1862:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Sector_$628_storage",
                              "typeString": "struct TypesSector.Sector storage ref"
                            }
                          },
                          "id": 98,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 611,
                          "src": "1862:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1848:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "52657175697265207468617420736563746f72207265666572656e63652062792061646472657373206973206f776e6564206279207468652063616c6c6572",
                        "id": 100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1904:65:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9af7a5f2f8948c5f07b4df3973e9b9b58de2136a591d0d391ba5b0f481863281",
                          "typeString": "literal_string \"Require that sector reference by address is owned by the caller\""
                        },
                        "value": "Require that sector reference by address is owned by the caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9af7a5f2f8948c5f07b4df3973e9b9b58de2136a591d0d391ba5b0f481863281",
                          "typeString": "literal_string \"Require that sector reference by address is owned by the caller\""
                        }
                      ],
                      "id": 92,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        940,
                        941
                      ],
                      "referencedDeclaration": 941,
                      "src": "1827:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1827:152:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102,
                  "nodeType": "ExpressionStatement",
                  "src": "1827:152:0"
                },
                {
                  "id": 103,
                  "nodeType": "PlaceholderStatement",
                  "src": "1989:1:0"
                }
              ]
            },
            "documentation": "************************************************************\nModifiers*************************************************************",
            "id": 105,
            "name": "callerOwnsSector",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 90,
                  "name": "sectorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 105,
                  "src": "1794:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1794:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1793:23:0"
            },
            "src": "1768:229:0",
            "visibility": "internal"
          }
        ],
        "scope": 107,
        "src": "169:1830:0"
      }
    ],
    "src": "0:1999:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/idanreed/Documents/repos/CryptoGame/contracts/Game.sol",
    "exportedSymbols": {
      "Game": [
        106
      ]
    },
    "id": 107,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "/Users/idanreed/Documents/repos/CryptoGame/contracts/types/TypesItem.sol",
        "file": "./types/TypesItem.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 107,
        "sourceUnit": 564,
        "src": "25:31:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/idanreed/Documents/repos/CryptoGame/contracts/types/TypesTransformation.sol",
        "file": "./types/TypesTransformation.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 107,
        "sourceUnit": 923,
        "src": "57:41:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/idanreed/Documents/repos/CryptoGame/contracts/types/TypesSector.sol",
        "file": "./types/TypesSector.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 107,
        "sourceUnit": 906,
        "src": "99:33:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/idanreed/Documents/repos/CryptoGame/contracts/ProductionManager.sol",
        "file": "./ProductionManager.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 107,
        "sourceUnit": 432,
        "src": "134:33:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6,
              "name": "TypesItem",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 563,
              "src": "190:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TypesItem_$563",
                "typeString": "contract TypesItem"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "190:9:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8,
              "name": "TypesTransformation",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 922,
              "src": "201:19:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TypesTransformation_$922",
                "typeString": "contract TypesTransformation"
              }
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "201:19:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10,
              "name": "TypesSector",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 905,
              "src": "222:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TypesSector_$905",
                "typeString": "contract TypesSector"
              }
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "222:11:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12,
              "name": "ProductionManager",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 431,
              "src": "239:17:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ProductionManager_$431",
                "typeString": "contract ProductionManager"
              }
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "239:17:0"
          }
        ],
        "contractDependencies": [
          540,
          905,
          922,
          563,
          431
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 106,
        "linearizedBaseContracts": [
          106,
          431,
          540,
          905,
          922,
          563
        ],
        "name": "Game",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 17,
            "name": "sectors",
            "nodeType": "VariableDeclaration",
            "scope": 106,
            "src": "413:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Sector_$628_storage_$",
              "typeString": "mapping(address => struct TypesSector.Sector)"
            },
            "typeName": {
              "id": 16,
              "keyType": {
                "id": 14,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "422:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "413:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Sector_$628_storage_$",
                "typeString": "mapping(address => struct TypesSector.Sector)"
              },
              "valueType": {
                "contractScope": null,
                "id": 15,
                "name": "Sector",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 628,
                "src": "433:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Sector_$628_storage_ptr",
                  "typeString": "struct TypesSector.Sector"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 39,
              "nodeType": "Block",
              "src": "662:167:0",
              "statements": [
                {
                  "assignments": [
                    21
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 21,
                      "name": "nativeSector",
                      "nodeType": "VariableDeclaration",
                      "scope": 39,
                      "src": "672:27:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Sector_$628_storage_ptr",
                        "typeString": "struct TypesSector.Sector"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 20,
                        "name": "Sector",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 628,
                        "src": "672:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Sector_$628_storage_ptr",
                          "typeString": "struct TypesSector.Sector"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 26,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 22,
                      "name": "sectors",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "702:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Sector_$628_storage_$",
                        "typeString": "mapping(address => struct TypesSector.Sector storage ref)"
                      }
                    },
                    "id": 25,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 23,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 937,
                        "src": "710:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 24,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "710:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "702:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Sector_$628_storage",
                      "typeString": "struct TypesSector.Sector storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "672:49:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 28,
                          "name": "nativeSector",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21,
                          "src": "739:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Sector_$628_storage_ptr",
                            "typeString": "struct TypesSector.Sector storage pointer"
                          }
                        },
                        "id": 29,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "initialized",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 609,
                        "src": "739:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "20",
                        "id": 30,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "765:3:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a",
                          "typeString": "literal_string \" \""
                        },
                        "value": " "
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a",
                          "typeString": "literal_string \" \""
                        }
                      ],
                      "id": 27,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        940,
                        941
                      ],
                      "referencedDeclaration": 941,
                      "src": "731:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 31,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "731:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32,
                  "nodeType": "ExpressionStatement",
                  "src": "731:38:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 34,
                        "name": "nativeSector",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "796:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Sector_$628_storage_ptr",
                          "typeString": "struct TypesSector.Sector storage pointer"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 35,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 937,
                          "src": "810:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 36,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "810:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Sector_$628_storage_ptr",
                          "typeString": "struct TypesSector.Sector storage pointer"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 33,
                      "name": "initializeSector",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 675,
                      "src": "779:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Sector_$628_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (struct TypesSector.Sector memory,address)"
                      }
                    },
                    "id": 37,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "779:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38,
                  "nodeType": "ExpressionStatement",
                  "src": "779:42:0"
                }
              ]
            },
            "documentation": "************************************************************\nPublic functions   - full*************************************************************",
            "id": 40,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initializeNativeSector",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "652:2:0"
            },
            "returnParameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "662:0:0"
            },
            "scope": 106,
            "src": "621:208:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 45,
              "nodeType": "Block",
              "src": "885:8:0",
              "statements": []
            },
            "documentation": null,
            "id": 46,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tickSector",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42,
                  "name": "sectorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 46,
                  "src": "855:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "855:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "854:23:0"
            },
            "returnParameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "885:0:0"
            },
            "scope": 106,
            "src": "835:58:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 55,
              "nodeType": "Block",
              "src": "1021:8:0",
              "statements": []
            },
            "documentation": null,
            "id": 56,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "manualTransformation",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48,
                  "name": "sectorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 56,
                  "src": "929:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "929:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50,
                  "name": "transformationId",
                  "nodeType": "VariableDeclaration",
                  "scope": 56,
                  "src": "952:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "952:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "928:46:0"
            },
            "returnParameters": {
              "id": 54,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53,
                  "name": "successful",
                  "nodeType": "VariableDeclaration",
                  "scope": 56,
                  "src": "1000:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1000:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "990:31:0"
            },
            "scope": 106,
            "src": "899:130:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 87,
              "nodeType": "Block",
              "src": "1372:240:0",
              "statements": [
                {
                  "assignments": [
                    70
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 70,
                      "name": "selSector",
                      "nodeType": "VariableDeclaration",
                      "scope": 87,
                      "src": "1383:23:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Sector_$628_memory_ptr",
                        "typeString": "struct TypesSector.Sector"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 69,
                        "name": "Sector",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 628,
                        "src": "1383:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Sector_$628_storage_ptr",
                          "typeString": "struct TypesSector.Sector"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 74,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 71,
                      "name": "sectors",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "1409:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Sector_$628_storage_$",
                        "typeString": "mapping(address => struct TypesSector.Sector storage ref)"
                      }
                    },
                    "id": 73,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 72,
                      "name": "sectorAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58,
                      "src": "1417:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1409:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Sector_$628_storage",
                      "typeString": "struct TypesSector.Sector storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1383:48:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 75,
                          "name": "selSector",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70,
                          "src": "1463:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Sector_$628_memory_ptr",
                            "typeString": "struct TypesSector.Sector memory"
                          }
                        },
                        "id": 76,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "initialized",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 609,
                        "src": "1463:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 77,
                          "name": "selSector",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70,
                          "src": "1498:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Sector_$628_memory_ptr",
                            "typeString": "struct TypesSector.Sector memory"
                          }
                        },
                        "id": 78,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "owner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 611,
                        "src": "1498:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 79,
                            "name": "selSector",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70,
                            "src": "1527:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Sector_$628_memory_ptr",
                              "typeString": "struct TypesSector.Sector memory"
                            }
                          },
                          "id": 80,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "cordinates",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 613,
                          "src": "1527:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SphereCordinate_$593_memory",
                            "typeString": "struct TypesSector.SphereCordinate memory"
                          }
                        },
                        "id": 81,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "xAngle",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 590,
                        "src": "1527:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 82,
                            "name": "selSector",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70,
                            "src": "1568:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Sector_$628_memory_ptr",
                              "typeString": "struct TypesSector.Sector memory"
                            }
                          },
                          "id": 83,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "cordinates",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 613,
                          "src": "1568:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SphereCordinate_$593_memory",
                            "typeString": "struct TypesSector.SphereCordinate memory"
                          }
                        },
                        "id": 84,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "zAngle",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 592,
                        "src": "1568:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 85,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1449:156:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_address_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(bool,address,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 68,
                  "id": 86,
                  "nodeType": "Return",
                  "src": "1442:163:0"
                }
              ]
            },
            "documentation": "************************************************************\nPublic functions   - view, pure*************************************************************",
            "id": 88,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSectorAttributes",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58,
                  "name": "sectorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 88,
                  "src": "1236:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1236:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1235:23:0"
            },
            "returnParameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61,
                  "name": "initialized",
                  "nodeType": "VariableDeclaration",
                  "scope": 88,
                  "src": "1289:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1289:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 88,
                  "src": "1315:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1315:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65,
                  "name": "xAngle",
                  "nodeType": "VariableDeclaration",
                  "scope": 88,
                  "src": "1338:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1338:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67,
                  "name": "zAngle",
                  "nodeType": "VariableDeclaration",
                  "scope": 88,
                  "src": "1359:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1359:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1279:93:0"
            },
            "scope": 106,
            "src": "1207:405:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 104,
              "nodeType": "Block",
              "src": "1817:180:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 99,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 93,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 937,
                            "src": "1848:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 94,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1848:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 95,
                              "name": "sectors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17,
                              "src": "1862:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Sector_$628_storage_$",
                                "typeString": "mapping(address => struct TypesSector.Sector storage ref)"
                              }
                            },
                            "id": 97,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 96,
                              "name": "sectorAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 90,
                              "src": "1870:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1862:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Sector_$628_storage",
                              "typeString": "struct TypesSector.Sector storage ref"
                            }
                          },
                          "id": 98,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 611,
                          "src": "1862:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1848:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "52657175697265207468617420736563746f72207265666572656e63652062792061646472657373206973206f776e6564206279207468652063616c6c6572",
                        "id": 100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1904:65:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9af7a5f2f8948c5f07b4df3973e9b9b58de2136a591d0d391ba5b0f481863281",
                          "typeString": "literal_string \"Require that sector reference by address is owned by the caller\""
                        },
                        "value": "Require that sector reference by address is owned by the caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9af7a5f2f8948c5f07b4df3973e9b9b58de2136a591d0d391ba5b0f481863281",
                          "typeString": "literal_string \"Require that sector reference by address is owned by the caller\""
                        }
                      ],
                      "id": 92,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        940,
                        941
                      ],
                      "referencedDeclaration": 941,
                      "src": "1827:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1827:152:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102,
                  "nodeType": "ExpressionStatement",
                  "src": "1827:152:0"
                },
                {
                  "id": 103,
                  "nodeType": "PlaceholderStatement",
                  "src": "1989:1:0"
                }
              ]
            },
            "documentation": "************************************************************\nModifiers*************************************************************",
            "id": 105,
            "name": "callerOwnsSector",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 90,
                  "name": "sectorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 105,
                  "src": "1794:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1794:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1793:23:0"
            },
            "src": "1768:229:0",
            "visibility": "internal"
          }
        ],
        "scope": 107,
        "src": "169:1830:0"
      }
    ],
    "src": "0:1999:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x3741Ee85361140B475f352E42bCb3c7E3021996A",
      "transactionHash": "0xcd8618dcde7c608d354329cf55a5b439843d6686cd9fe48bc49586d5000b5d9d"
    }
  },
  "schemaVersion": "3.0.16",
  "updatedAt": "2019-11-03T20:09:03.221Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {
      "addItem(uint256,uint256)": {
        "notice": "************************************************************ Item loading*************************************************************"
      },
      "addTransformation()": {
        "notice": "************************************************************ Transformation loading*************************************************************"
      },
      "convertAddressToCordinateTuple(address)": {
        "notice": "************************************************************ Public Views/Pure*************************************************************"
      },
      "getSectorAttributes(address)": {
        "notice": "************************************************************ Public functions   - view, pure*************************************************************"
      },
      "initializeNativeSector()": {
        "notice": "************************************************************ Public functions   - full*************************************************************"
      }
    }
  }
}