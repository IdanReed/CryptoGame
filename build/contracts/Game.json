{
  "contractName": "Game",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "itemId",
          "type": "uint256"
        }
      ],
      "name": "getItemProperties",
      "outputs": [
        {
          "name": "density",
          "type": "uint256"
        },
        {
          "name": "itemType",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "addTransformation",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "addExtractorProps",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "transformationId",
          "type": "uint256"
        }
      ],
      "name": "getTransformationProperties",
      "outputs": [
        {
          "name": "inputCounts",
          "type": "uint256"
        },
        {
          "name": "inputItemIds",
          "type": "uint256[50]"
        },
        {
          "name": "inputQuantities",
          "type": "uint256[50]"
        },
        {
          "name": "outputCounts",
          "type": "uint256"
        },
        {
          "name": "outputItemIds",
          "type": "uint256[50]"
        },
        {
          "name": "outputQuantities",
          "type": "uint256[50]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getProductionMapRanges",
      "outputs": [
        {
          "name": "itemCount",
          "type": "uint256"
        },
        {
          "name": "transformationCount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "density",
          "type": "uint256"
        },
        {
          "name": "itemType",
          "type": "uint256"
        }
      ],
      "name": "addItem",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "addressToConvert",
          "type": "address"
        }
      ],
      "name": "convertAddressToCordinateTuple",
      "outputs": [
        {
          "name": "xAngle",
          "type": "uint256"
        },
        {
          "name": "zAngle",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "isInput",
          "type": "bool"
        },
        {
          "name": "itemId",
          "type": "uint256"
        },
        {
          "name": "quantity",
          "type": "uint256"
        }
      ],
      "name": "addTransformationElement",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "initializeNativeSector",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "sectorAddress",
          "type": "address"
        }
      ],
      "name": "tickSector",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "sectorAddress",
          "type": "address"
        }
      ],
      "name": "getSectorAttributes",
      "outputs": [
        {
          "name": "initialized",
          "type": "bool"
        },
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "xAngle",
          "type": "uint256"
        },
        {
          "name": "zAngle",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"sectorAddress\",\"type\":\"address\"}],\"name\":\"tickSector\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"itemId\",\"type\":\"uint256\"}],\"name\":\"getItemProperties\",\"outputs\":[{\"name\":\"density\",\"type\":\"uint256\"},{\"name\":\"itemType\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"addTransformation\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"addExtractorProps\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"transformationId\",\"type\":\"uint256\"}],\"name\":\"getTransformationProperties\",\"outputs\":[{\"name\":\"inputCounts\",\"type\":\"uint256\"},{\"name\":\"inputItemIds\",\"type\":\"uint256[50]\"},{\"name\":\"inputQuantities\",\"type\":\"uint256[50]\"},{\"name\":\"outputCounts\",\"type\":\"uint256\"},{\"name\":\"outputItemIds\",\"type\":\"uint256[50]\"},{\"name\":\"outputQuantities\",\"type\":\"uint256[50]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getProductionMapRanges\",\"outputs\":[{\"name\":\"itemCount\",\"type\":\"uint256\"},{\"name\":\"transformationCount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"density\",\"type\":\"uint256\"},{\"name\":\"itemType\",\"type\":\"uint256\"}],\"name\":\"addItem\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addressToConvert\",\"type\":\"address\"}],\"name\":\"convertAddressToCordinateTuple\",\"outputs\":[{\"name\":\"xAngle\",\"type\":\"uint256\"},{\"name\":\"zAngle\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"isInput\",\"type\":\"bool\"},{\"name\":\"itemId\",\"type\":\"uint256\"},{\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"addTransformationElement\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"initializeNativeSector\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"sectorAddress\",\"type\":\"address\"}],\"name\":\"getSectorAttributes\",\"outputs\":[{\"name\":\"initialized\",\"type\":\"bool\"},{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"xAngle\",\"type\":\"uint256\"},{\"name\":\"zAngle\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{\"addItem(uint256,uint256)\":{\"notice\":\"************************************************************\\r Item loading\\r*************************************************************\"},\"addTransformation()\":{\"notice\":\"************************************************************\\r Transformation loading\\r*************************************************************\"},\"convertAddressToCordinateTuple(address)\":{\"notice\":\"************************************************************\\r Public Views/Pure\\r*************************************************************\"},\"getSectorAttributes(address)\":{\"notice\":\"************************************************************\\r Public functions   - view, pure\\r*************************************************************\"},\"initializeNativeSector()\":{\"notice\":\"************************************************************\\r Public functions   - full\\r*************************************************************\"}}}},\"settings\":{\"compilationTarget\":{\"/A/repos/crypto_game/contracts/Game.sol\":\"Game\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/A/repos/crypto_game/contracts/Game.sol\":{\"keccak256\":\"0x4a90b1d4a7fb536b0b7438b9d1cf3d578841defef90b4b4f5f19a7c9734f536e\",\"urls\":[\"bzzr://84dc62834860b60c0816bfa76b78d8bd836b8573e1c09d7dd60c4edca0c85d21\"]},\"/A/repos/crypto_game/contracts/ProductionManager.sol\":{\"keccak256\":\"0x8a1950340afbacb90c56d0464a396374ce93b2f7395bd1abe1addabddc804986\",\"urls\":[\"bzzr://8037f683c04e3531f9ddbbe7005667bf495e59531fb2336cd84427289d360007\"]},\"/A/repos/crypto_game/contracts/ProductionMap.sol\":{\"keccak256\":\"0x093204c2c20cd914957b03a19882f13780b4575e62e07f592feb8832bc589e30\",\"urls\":[\"bzzr://d0725d3f14709b5ee705e2f205d45e2df79667e24c6b6fc5724693199b63aedf\"]},\"/A/repos/crypto_game/contracts/types/TypesItem.sol\":{\"keccak256\":\"0xb159e3ed7e68aabad81ed9251984202e04a0adf68369345adb0821ddfb965bc9\",\"urls\":[\"bzzr://c2cc337195f2b38f756126bf8592578a19dee4c8248e3a652777ea1ae0b23cef\"]},\"/A/repos/crypto_game/contracts/types/TypesSector.sol\":{\"keccak256\":\"0x687fbcafc1e7779072126017ca23b22432076dad864c6e6704a221e596f9e7df\",\"urls\":[\"bzzr://58624070b6e04893d733e611b23f60f4c15430d2b129ecf82e3aceca408572e8\"]},\"/A/repos/crypto_game/contracts/types/TypesTransformation.sol\":{\"keccak256\":\"0xbac0c82da4cbf2e52bf2e9b2d30d6a7ed13712a18d9b1bb283ff1a934371ba9e\",\"urls\":[\"bzzr://79c70d091f129d0ffa006405ef90ba7950a91873df65bfe634d33ac997bf64e4\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611407806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806386f5ffde1161007157806386f5ffde14610254578063a212523214610279578063ba2371c5146102b1578063d5bbd77914610310578063f1e3769b14610354578063f82f6a881461035e576100a9565b80630124d89f146100ae57806321ce76de146100f2578063352c1c1f1461013b578063581228ac146101455780637b0ed1221461014f575b600080fd5b6100f0600480360360208110156100c457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103fb565b005b61011e6004803603602081101561010857600080fd5b81019080803590602001909291905050506103fe565b604051808381526020018281526020019250505060405180910390f35b6101436104c3565b005b61014d6104de565b005b61017b6004803603602081101561016557600080fd5b81019080803590602001909291905050506104e0565b6040518087815260200186603260200280838360005b838110156101ac578082015181840152602081019050610191565b5050505090500185603260200280838360005b838110156101da5780820151818401526020810190506101bf565b5050505090500184815260200183603260200280838360005b8381101561020e5780820151818401526020810190506101f3565b5050505090500182603260200280838360005b8381101561023c578082015181840152602081019050610221565b50505050905001965050505050505060405180910390f35b61025c61074e565b604051808381526020018281526020019250505060405180910390f35b6102af6004803603604081101561028f57600080fd5b810190808035906020019092919080359060200190929190505050610765565b005b6102f3600480360360208110156102c757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610849565b604051808381526020018281526020019250505060405180910390f35b6103526004803603606081101561032657600080fd5b810190808035151590602001909291908035906020019092919080359060200190929190505050610892565b005b61035c610978565b005b6103a06004803603602081101561037457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109e0565b60405180851515151581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390f35b50565b600080610409611184565b6001848154811061041657fe5b906000526020600020906004020160405180608001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff16600381111561046157fe5b600381111561046c57fe5b81526020016003820160405180602001604052908160008201604051806020016040529081600082015481525050815250508152505090508060200151816040015160038111156104b957fe5b9250925050915091565b60016000818180549050019150816104db91906111bd565b50565b565b60006104ea6111ef565b6104f26111ef565b60006104fc6111ef565b6105046111ef565b61050c611212565b6000888154811061051957fe5b90600052602060002090600302016040518060600160405290816000820154815260200160018201805480602002602001604051908101604052809291908181526020016000905b828210156105a757838290600052602060002090600202016040518060400160405290816000820154815260200160018201548152505081526020019060010190610561565b50505050815260200160028201805480602002602001604051908101604052809291908181526020016000905b8282101561061a578382906000526020600020906002020160405180604001604052908160008201548152602001600182015481525050815260200190600101906105d4565b5050505081525050905060008090505b8160200151518110156106a6578160200151818151811061064757fe5b60200260200101516000015187826032811061065f57fe5b6020020181815250508160200151818151811061067857fe5b60200260200101516020015186826032811061069057fe5b602002018181525050808060010191505061062a565b600090505b81604001515181101561072757816040015181815181106106c857fe5b6020026020010151600001518482603281106106e057fe5b602002018181525050816040015181815181106106f957fe5b60200260200101516020015183826032811061071157fe5b60200201818152505080806001019150506106ab565b81602001515187878460400151518787975097509750975097509750505091939550919395565b600080600180549050600080549050915091509091565b61076d611233565b610775611184565b60405180608001604052806001808054905003815260200185815260200184600381111561079f57fe5b60038111156107aa57fe5b815260200183815250905060018190806001815401808255809150509060018203906000526020600020906004020160009091929091909150600082015181600001556020820151816001015560408201518160020160006101000a81548160ff0219169083600381111561081b57fe5b0217905550606082015181600301600082015181600001600082015181600001555050505050505050505050565b600080600069ffffffffffffffffffff905060008473ffffffffffffffffffffffffffffffffffffffff169050605082198216901c935081811692508383935093505050915091565b600080600160008054905003815481106108a857fe5b906000526020600020906003020190506108c061124c565b60405180604001604052808581526020018481525090508415610929578160010181908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010155505050610971565b81600201819080600181540180825580915050906001820390600052602060002090600202016000909192909190915060008201518160000155602082015181600101555050505b5050505050565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060000160009054906101000a900460ff166109dd576109dc813333610d62565b5b50565b6000806000806109ee611266565b600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806101000160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182016040518060400160405290816000820154815260200160018201548152505081526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610b79578382906000526020600020906005020160405180606001604052908160008201604051806060016040529081600082015481526020016001820154815260200160028201548152505081526020016003820154815260200160048201548152505081526020019060010190610b01565b50505050815260200160058201805480602002602001604051908101604052809291908181526020016000905b82821015610c145783829060005260206000209060040201604051806060016040529081600082016040518060400160405290816000820154815260200160018201548152505081526020016002820154815260200160038201548152505081526020019060010190610ba6565b50505050815260200160068201805480602002602001604051908101604052809291908181526020016000905b82821015610c9b578382906000526020600020906002020160405180602001604052908160008201604051806040016040529081600082015481526020016001820154815250508152505081526020019060010190610c41565b50505050815260200160078201805480602002602001604051908101604052809291908181526020016000905b82821015610d2c57838290600052602060002090600302016040518060400160405290816000820160405180604001604052908160008201548152602001600182015481525050815260200160028201548152505081526020019060010190610cc8565b50505050815250509050806000015181602001518260400151600001518360400151602001519450945094509450509193509193565b8260000160009054906101000a900460ff1615610dca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806113aa6032913960400191505060405180910390fd5b818360000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018360000160006101000a81548160ff021916908315150217905550600080610e3683610849565b9150915060405180604001604052808381526020018281525085600101600082015181600001556020820151816001015590505061117a85604051806101000160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182016040518060400160405290816000820154815260200160018201548152505081526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610fba578382906000526020600020906005020160405180606001604052908160008201604051806060016040529081600082015481526020016001820154815260200160028201548152505081526020016003820154815260200160048201548152505081526020019060010190610f42565b50505050815260200160058201805480602002602001604051908101604052809291908181526020016000905b828210156110555783829060005260206000209060040201604051806060016040529081600082016040518060400160405290816000820154815260200160018201548152505081526020016002820154815260200160038201548152505081526020019060010190610fe7565b50505050815260200160068201805480602002602001604051908101604052809291908181526020016000905b828210156110dc578382906000526020600020906002020160405180602001604052908160008201604051806040016040529081600082015481526020016001820154815250508152505081526020019060010190611082565b50505050815260200160078201805480602002602001604051908101604052809291908181526020016000905b8282101561116d57838290600052602060002090600302016040518060400160405290816000820160405180604001604052908160008201548152602001600182015481525050815260200160028201548152505081526020019060010190611109565b5050505081525050611181565b5050505050565b50565b60405180608001604052806000815260200160008152602001600060038111156111aa57fe5b81526020016111b76112c9565b81525090565b8154818355818111156111ea576003028160030283600052602060002091820191016111e991906112e2565b5b505050565b604051806106400160405280603290602082028038833980820191505090505090565b60405180606001604052806000815260200160608152602001606081525090565b6040518060200160405280611246611329565b81525090565b604051806040016040528060008152602001600081525090565b604051806101200160405280600015158152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016112a061133c565b815260200160008152602001606081526020016060815260200160608152602001606081525090565b60405180602001604052806112dc611329565b81525090565b61132691905b80821115611322576000808201600090556001820160006113099190611356565b6002820160006113199190611356565b506003016112e8565b5090565b90565b6040518060200160405280600081525090565b604051806040016040528060008152602001600081525090565b5080546000825560020290600052602060002090810190611377919061137a565b50565b6113a691905b808211156113a257600080820160009055600182016000905550600201611380565b5090565b9056fe52657175697265207468617420676976656e20736563746f7220686173206e6f74206265656e20696e697469616c697a6564a165627a7a72305820ba71b2ee72a82641c025edef58b0e0cc656fa0c187376f5f04fabd576dc82bf90029",
  "deployedBytecode": "",
  "sourceMap": "177:2096:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;177:2096:0;;;;;;;",
  "deployedSourceMap": "177:2096:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;177:2096:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;879:60;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;879:60:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;1457:365:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1457:365:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1122:84:3;;;:::i;:::-;;900:48;;;:::i;:::-;;382:1067:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;382:1067:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;382:1067:2;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;382:1067:2;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;382:1067:2;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;382:1067:2;;;;;;;;;;;;;;;;;;;;;1830:221;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;551:343:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;551:343:3;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4503:386:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4503:386:5;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1212:435:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1212:435:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;642:229:0;;;:::i;:::-;;1450:424;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1450:424:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;879:60;;:::o;1457:365:2:-;1528:12;1551:13;1680:26;;:::i;:::-;1709:5;1715:6;1709:13;;;;;;;;;;;;;;;;;;1680:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1757:4;:12;;;1789:4;:13;;;1784:19;;;;;;;;1735:79;;;;;1457:365;;;:::o;1122:84:3:-;1197:1;1171:15;:27;;;;;;;;;;;;;;:::i;:::-;;1122:84::o;900:48::-;:::o;382:1067:2:-;473:16;500:28;;:::i;:::-;539:31;;:::i;:::-;581:17;609:29;;:::i;:::-;649:32;;:::i;:::-;699:36;;:::i;:::-;738:15;754:16;738:33;;;;;;;;;;;;;;;;;;699:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;784:6;811:1;807:5;;803:194;818:14;:21;;;:28;814:1;:32;803:194;;;885:14;:21;;;907:1;885:24;;;;;;;;;;;;;;:31;;;867:12;880:1;867:15;;;;;;;;;;:49;;;;;952:14;:21;;;974:1;952:24;;;;;;;;;;;;;;:33;;;931:15;947:1;931:18;;;;;;;;;;:54;;;;;848:3;;;;;;;803:194;;;1015:1;1011:5;;1007:199;1022:14;:22;;;:29;1018:1;:33;1007:199;;;1091:14;:22;;;1114:1;1091:25;;;;;;;;;;;;;;:32;;;1072:13;1086:1;1072:16;;;;;;;;;;:51;;;;;1160:14;:22;;;1183:1;1160:25;;;;;;;;;;;;;;:34;;;1138:16;1155:1;1138:19;;;;;;;;;;:56;;;;;1053:3;;;;;;;1007:199;;;1240:14;:21;;;:28;1283:12;1310:15;1342:14;:22;;;:29;1386:13;1414:16;1218:223;;;;;;;;;;;;;;382:1067;;;;;;;:::o;1830:221::-;1895:14;1920:24;1983:5;:12;;;;2010:15;:22;;;;1962:81;;;;1830:221;;:::o;551:343:3:-;617:47;;:::i;:::-;677:31;;:::i;:::-;711:143;;;;;;;;755:1;740:5;:12;;;;:16;711:143;;;;771:7;711:143;;;;802:8;793:18;;;;;;;;711:143;;;;;;;;;;;;826:17;711:143;;;677:177;;865:5;876:9;865:21;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;865:21:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;551:343;;;;:::o;4503:386:5:-;4620:11;4633;4662:14;4679:13;4662:30;;4703:18;4729:16;4724:22;;4703:43;;4800:2;4786:9;4785:10;4769:13;:26;4768:34;;4759:43;;4838:9;4822:13;:25;4813:34;;4866:6;4874;4858:23;;;;;;4503:386;;;:::o;1212:435:3:-;1310:37;1350:15;1391:1;1366:15;:22;;;;:26;1350:43;;;;;;;;;;;;;;;;;;1310:83;;1404:36;;:::i;:::-;1443:39;;;;;;;;1465:6;1443:39;;;;1473:8;1443:39;;;1404:78;;1502:7;1499:141;;;1526:14;:21;;1553:7;1526:35;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1526:35:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1499:141;;;1592:14;:22;;1620:7;1592:36;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1592:36:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1499:141;1212:435;;;;;:::o;642:229:0:-;694:27;724:7;:19;732:10;724:19;;;;;;;;;;;;;;;694:49;;758:12;:24;;;;;;;;;;;;754:110;;798:54;815:12;829:10;841;798:16;:54::i;:::-;754:110;642:229;:::o;1450:424::-;1533:16;1560:13;1584:11;1606;1637:23;;:::i;:::-;1663:7;:22;1671:13;1663:22;;;;;;;;;;;;;;;1637:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1720:9;:21;;;1756:9;:15;;;1786:9;:20;;;:27;;;1828:9;:20;;;:27;;;1698:168;;;;;;;;;1450:424;;;;;:::o;1756:635:5:-;1988:6;:18;;;;;;;;;;;;1987:19;1965:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2112:5;2097:6;:12;;;:20;;;;;;;;;;;;;;;;;;2149:4;2128:6;:18;;;:25;;;;;;;;;;;;;;;;;;2170:11;2196;2221:45;2252:13;2221:30;:45::ii;:::-;1756:635;;;;;:::o;2397:103::-;;:::o;177:2096:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;177:2096:0;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\r\n\r\nimport \"./types/TypesItem.sol\";\r\nimport \"./types/TypesTransformation.sol\";\r\nimport \"./types/TypesSector.sol\";\r\n\r\nimport \"./ProductionManager.sol\";\r\n\r\ncontract Game is\r\n    TypesItem, TypesTransformation, TypesSector,\r\n    ProductionManager\r\n    {\r\n\r\n    /**************************************************************\r\n    Data\r\n    **************************************************************/\r\n    mapping (address => Sector) sectors;\r\n\r\n    /**************************************************************\r\n    Public functions   - full\r\n    **************************************************************/\r\n    function initializeNativeSector() public {\r\n        Sector storage nativeSector = sectors[msg.sender];\r\n        if(!nativeSector.initialized){\r\n            initializeSector(nativeSector, msg.sender, msg.sender);\r\n        }\r\n    }\r\n\r\n    function tickSector(address sectorAddress) public {\r\n\r\n    }\r\n\r\n    // function manualTransformation(\r\n    //     address sectorAddress,\r\n    //     uint transformationId\r\n    // )\r\n    // public callerOwnsSector(sectorAddress) returns (\r\n    //     bool successful\r\n    // ){\r\n    //     return proccessTransformation(sectors[sectorAddress], transformations[transformationId]);\r\n    // }\r\n\r\n    /**************************************************************\r\n    Public functions   - view, pure\r\n    **************************************************************/\r\n    function getSectorAttributes(address sectorAddress) public view returns (\r\n        bool initialized,\r\n        address owner,\r\n        uint xAngle,\r\n        uint zAngle\r\n    ){\r\n\r\n        Sector memory selSector = sectors[sectorAddress];\r\n\r\n        return (\r\n            selSector.initialized,\r\n            selSector.owner,\r\n            selSector.cordinates.xAngle,\r\n            selSector.cordinates.zAngle\r\n        );\r\n    }\r\n\r\n    /**************************************************************\r\n    Modifiers\r\n    **************************************************************/\r\n    modifier callerOwnsSector(address sectorAddress) {\r\n        require(\r\n            msg.sender == sectors[sectorAddress].owner,\r\n            \"Require that sector reference by address is owned by the caller\"\r\n        );\r\n        _;\r\n    }\r\n}",
  "sourcePath": "A:/repos/crypto_game/contracts/Game.sol",
  "ast": {
    "absolutePath": "/A/repos/crypto_game/contracts/Game.sol",
    "exportedSymbols": {
      "Game": [
        97
      ]
    },
    "id": 98,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "/A/repos/crypto_game/contracts/types/TypesItem.sol",
        "file": "./types/TypesItem.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 98,
        "sourceUnit": 555,
        "src": "27:31:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/A/repos/crypto_game/contracts/types/TypesTransformation.sol",
        "file": "./types/TypesTransformation.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 98,
        "sourceUnit": 917,
        "src": "60:41:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/A/repos/crypto_game/contracts/types/TypesSector.sol",
        "file": "./types/TypesSector.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 98,
        "sourceUnit": 900,
        "src": "103:33:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/A/repos/crypto_game/contracts/ProductionManager.sol",
        "file": "./ProductionManager.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 98,
        "sourceUnit": 423,
        "src": "140:33:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6,
              "name": "TypesItem",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 554,
              "src": "199:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TypesItem_$554",
                "typeString": "contract TypesItem"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "199:9:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8,
              "name": "TypesTransformation",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 916,
              "src": "210:19:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TypesTransformation_$916",
                "typeString": "contract TypesTransformation"
              }
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "210:19:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10,
              "name": "TypesSector",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 899,
              "src": "231:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TypesSector_$899",
                "typeString": "contract TypesSector"
              }
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "231:11:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12,
              "name": "ProductionManager",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 422,
              "src": "249:17:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ProductionManager_$422",
                "typeString": "contract ProductionManager"
              }
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "249:17:0"
          }
        ],
        "contractDependencies": [
          422,
          531,
          554,
          899,
          916
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 97,
        "linearizedBaseContracts": [
          97,
          422,
          531,
          899,
          916,
          554
        ],
        "name": "Game",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 17,
            "name": "sectors",
            "nodeType": "VariableDeclaration",
            "scope": 97,
            "src": "429:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Sector_$619_storage_$",
              "typeString": "mapping(address => struct TypesSector.Sector)"
            },
            "typeName": {
              "id": 16,
              "keyType": {
                "id": 14,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "438:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "429:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Sector_$619_storage_$",
                "typeString": "mapping(address => struct TypesSector.Sector)"
              },
              "valueType": {
                "contractScope": null,
                "id": 15,
                "name": "Sector",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 619,
                "src": "449:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Sector_$619_storage_ptr",
                  "typeString": "struct TypesSector.Sector"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 40,
              "nodeType": "Block",
              "src": "683:188:0",
              "statements": [
                {
                  "assignments": [
                    21
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 21,
                      "name": "nativeSector",
                      "nodeType": "VariableDeclaration",
                      "scope": 40,
                      "src": "694:27:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Sector_$619_storage_ptr",
                        "typeString": "struct TypesSector.Sector"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 20,
                        "name": "Sector",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 619,
                        "src": "694:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Sector_$619_storage_ptr",
                          "typeString": "struct TypesSector.Sector"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 26,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 22,
                      "name": "sectors",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "724:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Sector_$619_storage_$",
                        "typeString": "mapping(address => struct TypesSector.Sector storage ref)"
                      }
                    },
                    "id": 25,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 23,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 931,
                        "src": "732:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 24,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "732:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "724:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Sector_$619_storage",
                      "typeString": "struct TypesSector.Sector storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "694:49:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 29,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "757:25:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 27,
                        "name": "nativeSector",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "758:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Sector_$619_storage_ptr",
                          "typeString": "struct TypesSector.Sector storage pointer"
                        }
                      },
                      "id": 28,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialized",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 600,
                      "src": "758:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 39,
                  "nodeType": "IfStatement",
                  "src": "754:110:0",
                  "trueBody": {
                    "id": 38,
                    "nodeType": "Block",
                    "src": "783:81:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 31,
                              "name": "nativeSector",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21,
                              "src": "815:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Sector_$619_storage_ptr",
                                "typeString": "struct TypesSector.Sector storage pointer"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 32,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 931,
                                "src": "829:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 33,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "829:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 34,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 931,
                                "src": "841:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 35,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "841:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Sector_$619_storage_ptr",
                                "typeString": "struct TypesSector.Sector storage pointer"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 30,
                            "name": "initializeSector",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 669,
                            "src": "798:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Sector_$619_storage_ptr_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (struct TypesSector.Sector storage pointer,address,address)"
                            }
                          },
                          "id": 36,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "798:54:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 37,
                        "nodeType": "ExpressionStatement",
                        "src": "798:54:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "************************************************************\r\nPublic functions   - full\r*************************************************************",
            "id": 41,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initializeNativeSector",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "673:2:0"
            },
            "returnParameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "683:0:0"
            },
            "scope": 97,
            "src": "642:229:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 46,
              "nodeType": "Block",
              "src": "929:10:0",
              "statements": []
            },
            "documentation": null,
            "id": 47,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tickSector",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43,
                  "name": "sectorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "899:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "899:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "898:23:0"
            },
            "returnParameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "929:0:0"
            },
            "scope": 97,
            "src": "879:60:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 78,
              "nodeType": "Block",
              "src": "1624:250:0",
              "statements": [
                {
                  "assignments": [
                    61
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61,
                      "name": "selSector",
                      "nodeType": "VariableDeclaration",
                      "scope": 78,
                      "src": "1637:23:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Sector_$619_memory_ptr",
                        "typeString": "struct TypesSector.Sector"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 60,
                        "name": "Sector",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 619,
                        "src": "1637:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Sector_$619_storage_ptr",
                          "typeString": "struct TypesSector.Sector"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 65,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 62,
                      "name": "sectors",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "1663:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Sector_$619_storage_$",
                        "typeString": "mapping(address => struct TypesSector.Sector storage ref)"
                      }
                    },
                    "id": 64,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 63,
                      "name": "sectorAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "1671:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1663:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Sector_$619_storage",
                      "typeString": "struct TypesSector.Sector storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1637:48:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 66,
                          "name": "selSector",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61,
                          "src": "1720:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Sector_$619_memory_ptr",
                            "typeString": "struct TypesSector.Sector memory"
                          }
                        },
                        "id": 67,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "initialized",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 600,
                        "src": "1720:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 68,
                          "name": "selSector",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61,
                          "src": "1756:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Sector_$619_memory_ptr",
                            "typeString": "struct TypesSector.Sector memory"
                          }
                        },
                        "id": 69,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "owner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 602,
                        "src": "1756:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 70,
                            "name": "selSector",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61,
                            "src": "1786:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Sector_$619_memory_ptr",
                              "typeString": "struct TypesSector.Sector memory"
                            }
                          },
                          "id": 71,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "cordinates",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 604,
                          "src": "1786:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SphereCordinate_$584_memory",
                            "typeString": "struct TypesSector.SphereCordinate memory"
                          }
                        },
                        "id": 72,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "xAngle",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 581,
                        "src": "1786:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 73,
                            "name": "selSector",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61,
                            "src": "1828:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Sector_$619_memory_ptr",
                              "typeString": "struct TypesSector.Sector memory"
                            }
                          },
                          "id": 74,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "cordinates",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 604,
                          "src": "1828:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SphereCordinate_$584_memory",
                            "typeString": "struct TypesSector.SphereCordinate memory"
                          }
                        },
                        "id": 75,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "zAngle",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 583,
                        "src": "1828:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 76,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1705:161:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_address_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(bool,address,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 59,
                  "id": 77,
                  "nodeType": "Return",
                  "src": "1698:168:0"
                }
              ]
            },
            "documentation": "************************************************************\r\nPublic functions   - view, pure\r*************************************************************",
            "id": 79,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSectorAttributes",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49,
                  "name": "sectorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "1479:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1479:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1478:23:0"
            },
            "returnParameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52,
                  "name": "initialized",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "1533:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1533:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "1560:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1560:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56,
                  "name": "xAngle",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "1584:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1584:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58,
                  "name": "zAngle",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "1606:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1606:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1522:102:0"
            },
            "scope": 97,
            "src": "1450:424:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 95,
              "nodeType": "Block",
              "src": "2084:186:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 90,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 84,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 931,
                            "src": "2117:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 85,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2117:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 86,
                              "name": "sectors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17,
                              "src": "2131:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Sector_$619_storage_$",
                                "typeString": "mapping(address => struct TypesSector.Sector storage ref)"
                              }
                            },
                            "id": 88,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 87,
                              "name": "sectorAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 81,
                              "src": "2139:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2131:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Sector_$619_storage",
                              "typeString": "struct TypesSector.Sector storage ref"
                            }
                          },
                          "id": 89,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 602,
                          "src": "2131:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2117:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "52657175697265207468617420736563746f72207265666572656e63652062792061646472657373206973206f776e6564206279207468652063616c6c6572",
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2174:65:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9af7a5f2f8948c5f07b4df3973e9b9b58de2136a591d0d391ba5b0f481863281",
                          "typeString": "literal_string \"Require that sector reference by address is owned by the caller\""
                        },
                        "value": "Require that sector reference by address is owned by the caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9af7a5f2f8948c5f07b4df3973e9b9b58de2136a591d0d391ba5b0f481863281",
                          "typeString": "literal_string \"Require that sector reference by address is owned by the caller\""
                        }
                      ],
                      "id": 83,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        934,
                        935
                      ],
                      "referencedDeclaration": 935,
                      "src": "2095:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2095:155:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "2095:155:0"
                },
                {
                  "id": 94,
                  "nodeType": "PlaceholderStatement",
                  "src": "2261:1:0"
                }
              ]
            },
            "documentation": "************************************************************\r\nModifiers\r*************************************************************",
            "id": 96,
            "name": "callerOwnsSector",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81,
                  "name": "sectorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 96,
                  "src": "2061:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2061:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2060:23:0"
            },
            "src": "2035:235:0",
            "visibility": "internal"
          }
        ],
        "scope": 98,
        "src": "177:2096:0"
      }
    ],
    "src": "0:2273:0"
  },
  "legacyAST": {
    "absolutePath": "/A/repos/crypto_game/contracts/Game.sol",
    "exportedSymbols": {
      "Game": [
        97
      ]
    },
    "id": 98,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "/A/repos/crypto_game/contracts/types/TypesItem.sol",
        "file": "./types/TypesItem.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 98,
        "sourceUnit": 555,
        "src": "27:31:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/A/repos/crypto_game/contracts/types/TypesTransformation.sol",
        "file": "./types/TypesTransformation.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 98,
        "sourceUnit": 917,
        "src": "60:41:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/A/repos/crypto_game/contracts/types/TypesSector.sol",
        "file": "./types/TypesSector.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 98,
        "sourceUnit": 900,
        "src": "103:33:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/A/repos/crypto_game/contracts/ProductionManager.sol",
        "file": "./ProductionManager.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 98,
        "sourceUnit": 423,
        "src": "140:33:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6,
              "name": "TypesItem",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 554,
              "src": "199:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TypesItem_$554",
                "typeString": "contract TypesItem"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "199:9:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8,
              "name": "TypesTransformation",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 916,
              "src": "210:19:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TypesTransformation_$916",
                "typeString": "contract TypesTransformation"
              }
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "210:19:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10,
              "name": "TypesSector",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 899,
              "src": "231:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TypesSector_$899",
                "typeString": "contract TypesSector"
              }
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "231:11:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12,
              "name": "ProductionManager",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 422,
              "src": "249:17:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ProductionManager_$422",
                "typeString": "contract ProductionManager"
              }
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "249:17:0"
          }
        ],
        "contractDependencies": [
          422,
          531,
          554,
          899,
          916
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 97,
        "linearizedBaseContracts": [
          97,
          422,
          531,
          899,
          916,
          554
        ],
        "name": "Game",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 17,
            "name": "sectors",
            "nodeType": "VariableDeclaration",
            "scope": 97,
            "src": "429:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Sector_$619_storage_$",
              "typeString": "mapping(address => struct TypesSector.Sector)"
            },
            "typeName": {
              "id": 16,
              "keyType": {
                "id": 14,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "438:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "429:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Sector_$619_storage_$",
                "typeString": "mapping(address => struct TypesSector.Sector)"
              },
              "valueType": {
                "contractScope": null,
                "id": 15,
                "name": "Sector",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 619,
                "src": "449:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Sector_$619_storage_ptr",
                  "typeString": "struct TypesSector.Sector"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 40,
              "nodeType": "Block",
              "src": "683:188:0",
              "statements": [
                {
                  "assignments": [
                    21
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 21,
                      "name": "nativeSector",
                      "nodeType": "VariableDeclaration",
                      "scope": 40,
                      "src": "694:27:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Sector_$619_storage_ptr",
                        "typeString": "struct TypesSector.Sector"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 20,
                        "name": "Sector",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 619,
                        "src": "694:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Sector_$619_storage_ptr",
                          "typeString": "struct TypesSector.Sector"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 26,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 22,
                      "name": "sectors",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "724:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Sector_$619_storage_$",
                        "typeString": "mapping(address => struct TypesSector.Sector storage ref)"
                      }
                    },
                    "id": 25,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 23,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 931,
                        "src": "732:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 24,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "732:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "724:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Sector_$619_storage",
                      "typeString": "struct TypesSector.Sector storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "694:49:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 29,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "757:25:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 27,
                        "name": "nativeSector",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "758:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Sector_$619_storage_ptr",
                          "typeString": "struct TypesSector.Sector storage pointer"
                        }
                      },
                      "id": 28,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialized",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 600,
                      "src": "758:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 39,
                  "nodeType": "IfStatement",
                  "src": "754:110:0",
                  "trueBody": {
                    "id": 38,
                    "nodeType": "Block",
                    "src": "783:81:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 31,
                              "name": "nativeSector",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21,
                              "src": "815:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Sector_$619_storage_ptr",
                                "typeString": "struct TypesSector.Sector storage pointer"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 32,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 931,
                                "src": "829:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 33,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "829:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 34,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 931,
                                "src": "841:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 35,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "841:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Sector_$619_storage_ptr",
                                "typeString": "struct TypesSector.Sector storage pointer"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 30,
                            "name": "initializeSector",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 669,
                            "src": "798:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Sector_$619_storage_ptr_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (struct TypesSector.Sector storage pointer,address,address)"
                            }
                          },
                          "id": 36,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "798:54:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 37,
                        "nodeType": "ExpressionStatement",
                        "src": "798:54:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "************************************************************\r\nPublic functions   - full\r*************************************************************",
            "id": 41,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initializeNativeSector",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "673:2:0"
            },
            "returnParameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "683:0:0"
            },
            "scope": 97,
            "src": "642:229:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 46,
              "nodeType": "Block",
              "src": "929:10:0",
              "statements": []
            },
            "documentation": null,
            "id": 47,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tickSector",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43,
                  "name": "sectorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "899:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "899:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "898:23:0"
            },
            "returnParameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "929:0:0"
            },
            "scope": 97,
            "src": "879:60:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 78,
              "nodeType": "Block",
              "src": "1624:250:0",
              "statements": [
                {
                  "assignments": [
                    61
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61,
                      "name": "selSector",
                      "nodeType": "VariableDeclaration",
                      "scope": 78,
                      "src": "1637:23:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Sector_$619_memory_ptr",
                        "typeString": "struct TypesSector.Sector"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 60,
                        "name": "Sector",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 619,
                        "src": "1637:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Sector_$619_storage_ptr",
                          "typeString": "struct TypesSector.Sector"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 65,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 62,
                      "name": "sectors",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "1663:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Sector_$619_storage_$",
                        "typeString": "mapping(address => struct TypesSector.Sector storage ref)"
                      }
                    },
                    "id": 64,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 63,
                      "name": "sectorAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "1671:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1663:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Sector_$619_storage",
                      "typeString": "struct TypesSector.Sector storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1637:48:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 66,
                          "name": "selSector",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61,
                          "src": "1720:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Sector_$619_memory_ptr",
                            "typeString": "struct TypesSector.Sector memory"
                          }
                        },
                        "id": 67,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "initialized",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 600,
                        "src": "1720:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 68,
                          "name": "selSector",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61,
                          "src": "1756:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Sector_$619_memory_ptr",
                            "typeString": "struct TypesSector.Sector memory"
                          }
                        },
                        "id": 69,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "owner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 602,
                        "src": "1756:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 70,
                            "name": "selSector",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61,
                            "src": "1786:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Sector_$619_memory_ptr",
                              "typeString": "struct TypesSector.Sector memory"
                            }
                          },
                          "id": 71,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "cordinates",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 604,
                          "src": "1786:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SphereCordinate_$584_memory",
                            "typeString": "struct TypesSector.SphereCordinate memory"
                          }
                        },
                        "id": 72,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "xAngle",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 581,
                        "src": "1786:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 73,
                            "name": "selSector",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61,
                            "src": "1828:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Sector_$619_memory_ptr",
                              "typeString": "struct TypesSector.Sector memory"
                            }
                          },
                          "id": 74,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "cordinates",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 604,
                          "src": "1828:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SphereCordinate_$584_memory",
                            "typeString": "struct TypesSector.SphereCordinate memory"
                          }
                        },
                        "id": 75,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "zAngle",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 583,
                        "src": "1828:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 76,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1705:161:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_address_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(bool,address,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 59,
                  "id": 77,
                  "nodeType": "Return",
                  "src": "1698:168:0"
                }
              ]
            },
            "documentation": "************************************************************\r\nPublic functions   - view, pure\r*************************************************************",
            "id": 79,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSectorAttributes",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49,
                  "name": "sectorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "1479:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1479:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1478:23:0"
            },
            "returnParameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52,
                  "name": "initialized",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "1533:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1533:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "1560:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1560:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56,
                  "name": "xAngle",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "1584:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1584:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58,
                  "name": "zAngle",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "1606:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1606:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1522:102:0"
            },
            "scope": 97,
            "src": "1450:424:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 95,
              "nodeType": "Block",
              "src": "2084:186:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 90,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 84,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 931,
                            "src": "2117:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 85,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2117:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 86,
                              "name": "sectors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17,
                              "src": "2131:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Sector_$619_storage_$",
                                "typeString": "mapping(address => struct TypesSector.Sector storage ref)"
                              }
                            },
                            "id": 88,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 87,
                              "name": "sectorAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 81,
                              "src": "2139:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2131:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Sector_$619_storage",
                              "typeString": "struct TypesSector.Sector storage ref"
                            }
                          },
                          "id": 89,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 602,
                          "src": "2131:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2117:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "52657175697265207468617420736563746f72207265666572656e63652062792061646472657373206973206f776e6564206279207468652063616c6c6572",
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2174:65:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9af7a5f2f8948c5f07b4df3973e9b9b58de2136a591d0d391ba5b0f481863281",
                          "typeString": "literal_string \"Require that sector reference by address is owned by the caller\""
                        },
                        "value": "Require that sector reference by address is owned by the caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9af7a5f2f8948c5f07b4df3973e9b9b58de2136a591d0d391ba5b0f481863281",
                          "typeString": "literal_string \"Require that sector reference by address is owned by the caller\""
                        }
                      ],
                      "id": 83,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        934,
                        935
                      ],
                      "referencedDeclaration": 935,
                      "src": "2095:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2095:155:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "2095:155:0"
                },
                {
                  "id": 94,
                  "nodeType": "PlaceholderStatement",
                  "src": "2261:1:0"
                }
              ]
            },
            "documentation": "************************************************************\r\nModifiers\r*************************************************************",
            "id": 96,
            "name": "callerOwnsSector",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81,
                  "name": "sectorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 96,
                  "src": "2061:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2061:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2060:23:0"
            },
            "src": "2035:235:0",
            "visibility": "internal"
          }
        ],
        "scope": 98,
        "src": "177:2096:0"
      }
    ],
    "src": "0:2273:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x3741Ee85361140B475f352E42bCb3c7E3021996A",
      "transactionHash": "0xcd8618dcde7c608d354329cf55a5b439843d6686cd9fe48bc49586d5000b5d9d"
    }
  },
  "schemaVersion": "3.0.14",
  "updatedAt": "2019-11-13T21:06:49.432Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {
      "addItem(uint256,uint256)": {
        "notice": "************************************************************\r Item loading\r*************************************************************"
      },
      "addTransformation()": {
        "notice": "************************************************************\r Transformation loading\r*************************************************************"
      },
      "convertAddressToCordinateTuple(address)": {
        "notice": "************************************************************\r Public Views/Pure\r*************************************************************"
      },
      "getSectorAttributes(address)": {
        "notice": "************************************************************\r Public functions   - view, pure\r*************************************************************"
      },
      "initializeNativeSector()": {
        "notice": "************************************************************\r Public functions   - full\r*************************************************************"
      }
    }
  }
}